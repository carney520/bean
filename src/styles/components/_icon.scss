 /// icon sizes
 /// @type {Map}
 $icon-sizes: (
   tiny: convert-to-rem(12px),
   small: convert-to-rem(14px),
   default: 1em,
   large: convert-to-rem(25px),
   xlarge: convert-to-rem(35px),
   xxlarge: convert-to-rem(50px),
 ) !default;

 $icon-color-light: $white !default;
 $icon-color-dark: $black !default;
 $icon-disabled-color: $medium-gray !default;
 $icon-close-width:  1.4rem !default;

 @mixin close-icon {
   @include square($icon-close-width);
   position: absolute;
   left: 100%;
   top: 0;
   transform: translate(-50%, -50%);
   border: 1px solid $white;
   border-radius: 100%;
   box-shadow: 0 0 1px 0 $light-gray;
   background-color: $white;
   transition: all .3s ease-in;
   cursor: pointer;

   @include hover-focus-active {
     @include square($icon-close-width * 1.2);
   }
 }

 @mixin generate-icon {
   // base rules
   @include block(icon) {
     @include ghost-center-content;
     transition: transform .3s ease-in-out;
     backface-visibility: hidden;

     /*** 尺寸  ***/
     @include square(map-get($icon-sizes, default));
     @each $name, $size in $icon-sizes {
       @include modifier($name) {
         @include square($size);
       }
     }

     @include modifier(full, expanded) {
       @include square(100%);
     }


     /*** 颜色  ***/
     fill: currentColor;
     // 前景色
     @include modifier(light, white) {
       fill: $icon-color-light;
     }

     @include modifier(inverse, black, dark) {
       fill: $icon-color-dark;
     }

     // 背景色
     @include modifier(bg-light, bg-white) {
       background-color: $icon-color-light;
     }

     @include modifier(bg-inverse, bg-black, bg-dark) {
       background-color: $icon-color-dark;
     }

     @include modifier(disabled, muted, '[class*="hover"]') {
       fill: $icon-disabled-color;
     }

     /***  特效  ***/
     @include modifier(loader, spin, '.is-loading') {
      transform: translateZ(0);
      animation: rotate360 1.1s infinite linear;
     }

     /***  职责  ***/
     // as button
     @include modifier(button) {
       cursor: pointer;
     }

     // as close button
     @include modifier(close-button) {
       @include close-icon;
     }

     /***  布局  ***/
     // centered
     @include modifier(centered) {
       @include absolute-center;
     }

     // icon rotate
     @include modifier(rotate-90) {
       transform: rotate(90deg);
     }

     @include modifier(rotate-180) {
       transform: rotate(180deg);
     }

     @include modifier(rotate-270) {
       transform: rotate(270deg);
     }

     // icon flip（倒置）
     @include modifier(flip-horizontal) {
       transform: scale(-1, 1);
     }

     @include modifier(flip-vertial) {
       transform: scale(1, -1);
     }

     /***  形状  ***/
     @include modifier(round, circle) {
       border-radius: 100%;
     }

   }

   // default theme
   @include generate-icon-appearance;
   // other theme
   @include generate-icon-theme;
 }

 @mixin generate-icon-appearance {
   @include block(icon) {
     // color
     @each $name, $color in $global-palette {
       @include modifier($name) {
         fill: $color;
       }

       @include modifier('bg-#{$name}') {
         background-color: $color;
       }

       @include modifier('hover-#{$name}') {
         &:active,
         &:hover,
         &:focus {
           fill: $color;
         }
       }
     }
   }
 }

 @mixin generate-icon-theme {
   @include each-theme {
     @include theme($current-theme-name) {
       @include generate-icon-appearance;
     }
   }
 }